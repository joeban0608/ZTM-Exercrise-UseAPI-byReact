{"version":3,"sources":["component/SelectBox.js","component/SentenceBox.js","component/Scroll.js","component/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["SelectBoxForLoading","valueReset","selectChange","className","value","onChange","SelectBox","SentenceBox","num","numSentence","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","randomFetch","fetch","then","response","text","sentence","randomNumType","onSelectChange","event","target","length","undefined","split","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAoBaA,EAAsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAE9C,OACI,qBAAKC,UAAU,MAAf,SACI,wBAAOA,UAAU,yDAAjB,UACI,sBAAMA,UAAU,QAAhB,qCACA,yBAAQC,MAAQH,EAAaI,SAAUH,EAAvC,UACI,wBAAQE,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2BAOLE,EApCG,SAAC,GAAkC,IAAhCL,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,wBAAOA,UAAU,sDAAjB,UACI,sBAAMA,UAAU,QAAhB,qCACA,yBAAQC,MAAQH,EAAaI,SAAUH,EAAvC,UACI,wBAAQE,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2BCGLG,EAZK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,YAEvB,OACI,qBAAKN,UAAU,qDAAf,SACI,gCACI,6BAAI,sBAAMA,UAAU,2CAAhB,SAA6DK,MACjE,oBAAGL,UAAU,6CAAb,cAA6DM,EAA7D,aCMDC,EAZA,SAACC,GACZ,OACI,qBAAKC,MAAO,CACRC,UAAW,SACXC,OAAQ,eACRC,OAAQ,SAHZ,SAKKJ,EAAMK,YCcJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SAEJ,6BAAI,0EAERG,KAAKX,MAAMK,a,GAjBEQ,aCuEbC,G,6DAhEX,aAAe,IAAD,8BACV,gBASJC,YAAc,WACVC,MAAM,gCAAD,OAAiC,EAAKT,MAAMd,QAChDwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAQ,OAAI,EAAKR,SAAS,CAACS,cAAcD,QAbrC,EAiBdE,eAAiB,SAACC,GACd,EAAKX,SAAS,CAACnB,MAAO8B,EAAMC,OAAO/B,QAEnC,EAAKsB,eAlBL,EAAKR,MAAQ,CACTd,MAAO,GACP4B,cAAe,IAJT,E,0CAuBd,WACI,MAA+BV,KAAKJ,MAA7Bd,EAAP,EAAOA,MAAO4B,EAAd,EAAcA,cAWd,OAAKA,EAAcI,OASX,sBAAKjC,UAAU,KAAf,UACI,oBAAIA,UAAU,cAAd,SAA4B,4DAC5B,cAAC,EAAD,CAAWF,WAAYG,EAAOF,aAAcoB,KAAKW,iBACjD,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAaxB,YArBpBL,GAAS4B,EAAgBA,OAAgBK,EAqBc7B,IAjBvDJ,GAAS4B,EAAgBA,EAAcM,MAAM,KAAK,GAAK,SAoBxD,iCACI,gCACI,oBAAGnC,UAAU,cAAb,4BAA0C,mBAAGgC,OAAO,SAASI,KAAK,qCAAqCC,IAAI,aAAjE,0BAC1C,mBAAGrC,UAAU,cAAb,SAA2B,wDAAuB,mBAAGgC,OAAO,SAASI,KAAK,qDAAqDC,IAAI,aAAjF,qCAlB9D,sBAAKrC,UAAU,KAAf,UACI,cAAC,EAAD,CAAqBF,WAAYG,EAAOF,aAAcoB,KAAKW,iBAC3D,oBAAI9B,UAAU,aAAd,SAA2B,uD,GAxC7BqB,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc91355e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SelectBox = ({ valueReset, selectChange }) => {\r\n    return (\r\n        <div className=\"pa4\">\r\n            <label className=\"f3 lh-title pa3 ba b--green bg-lightest-blue tc dib\">\r\n                <span className=\"black\">Pick your random type: </span>\r\n                <select value={ valueReset } onChange={selectChange}>\r\n                    <option value=\"trivia\">Trivia</option>\r\n                    <option value=\"year\">Year</option>\r\n                    <option value=\"date\">Date</option>\r\n                    <option value=\"math\">Math</option>\r\n                </select>\r\n            </label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// for Loading page\r\nexport const SelectBoxForLoading = ({ valueReset, selectChange }) => {\r\n    \r\n    return (\r\n        <div className=\"pa4\">\r\n            <label className=\"f3 diblh-title pa3 ba b--green bg-lightest-blue tc dib\">\r\n                <span className=\"black\">Pick your random type: </span>\r\n                <select value={ valueReset } onChange={selectChange}>\r\n                    <option value=\"None\">None</option>\r\n                    <option value=\"trivia\">Trivia</option>\r\n                    <option value=\"year\">Year</option>\r\n                    <option value=\"date\">Date</option>\r\n                    <option value=\"math\">Math</option>\r\n                </select>\r\n            </label>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default SelectBox;","import React from 'react';\r\n\r\nconst SentenceBox = ({num, numSentence}) => {\r\n    // console.log({numSentence})\r\n    return (\r\n        <div className=\"tc bg-light-gray dib br4 pa4 ma3 grow bw2 shadow-5\">\r\n            <div>\r\n                <h2><span className=\"b--dashed b--dark-pink f2 lh-title black\">{ num }</span></h2>\r\n                <p className=\"ba b--dotted bw1 b--light-blue f3 lh-title\"> { numSentence } </p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default SentenceBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n            overflowY: 'scroll',\r\n            border: 'thick double',\r\n            height: '400px'\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // 你可以render 任何客製化的 fallback UI\r\n            return <h1><span>Oops. There were somethings wrong...</span></h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from 'react';\r\nimport SelectBox,{SelectBoxForLoading} from '../component/SelectBox'\r\nimport SentenceBox from '../component/SentenceBox'\r\nimport Scroll from '../component/Scroll'\r\nimport ErrorBoundary from '../component/ErrorBoundary';\r\nimport './App.css';\r\nimport 'tachyons';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            value: '',\r\n            randomNumType: '',\r\n        }\r\n    }\r\n    \r\n    //設定請求api，這邊不用componentDidMount()，而是自己做一個function，在onSelectChange時，再callback請求\r\n    //因為我每次改變selcet就需要請求一次，但如果是用componentDidMount()進入lifecycle Hooks循環會有限制。\r\n    randomFetch = () => {\r\n        fetch(`http://numbersapi.com/random/${this.state.value}`)\r\n        .then(response => response.text())\r\n        .then(sentence => this.setState({randomNumType:sentence}))\r\n    }\r\n    // 設定監聽onSelectChange\r\n    // 如果不寫  this.handleChange = this.handleChange.bind(this);　要用arrowfunction才可以執行：\r\n    onSelectChange = (event) => {\r\n        this.setState({value: event.target.value})\r\n        // this.randomFetch()　改變select之後，reset randomFetch的請求\r\n        this.randomFetch()\r\n    }\r\n    \r\n    render() {\r\n        const {value, randomNumType} = this.state;\r\n\r\n        // function to set <SentenceBox numSentence={}>\r\n        const checkNumSentence = () => {\r\n            return ((value && randomNumType)? randomNumType : undefined)\r\n        }\r\n        // function to set <SentenceBox num={}>\r\n        const checkNum = () => {\r\n            return ((value && randomNumType)? randomNumType.split(' ')[0] : '')\r\n        }\r\n\r\n        if (!randomNumType.length) {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <SelectBoxForLoading valueReset={value} selectChange={this.onSelectChange}/>\r\n                    <h1 className=\"f-headline\"><span>Loading...</span></h1>\r\n                </div>\r\n                )\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1 lh-title\"><span>The Secret of Number: </span></h1>\r\n                    <SelectBox valueReset={value} selectChange={this.onSelectChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <SentenceBox numSentence={ checkNumSentence() } num={ checkNum() } />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                    <footer>\r\n                        <div>\r\n                            <p className=\"f4 lh-title\">Reference API: <a target=\"_blank\" href=\"http://numbersapi.com/#random/math\" rel=\"noreferrer\">NumberAPI</a></p>\r\n                            <p className=\"f4 lh-title\"><span>Copyright © 2021 <a target=\"_blank\" href=\"https://github.com/joeban0608/ZTM-Exercrise-UseAPI\" rel=\"noreferrer\">Joeban0608</a></span></p>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}